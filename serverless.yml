# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: tunogya
service: relay-ws

package:
  patterns:
    - "src/**"
  individually: true
  excludeDevDependencies: true

provider:
  name: aws
  runtime: nodejs18.x
  deploymentMethod: direct
  region: ap-northeast-1
  websocketsApiName: relay-ws
  websocketsApiRouteSelectionExpression: $request.body.[0]
  environment:
    NOSTR_EVENTS_SNS_ARN: ${env:NOSTR_EVENTS_SNS_ARN}
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    UPSTASH_REDIS_REST_URL: ${env:UPSTASH_REDIS_REST_URL}
    UPSTASH_REDIS_REST_TOKEN: ${env:UPSTASH_REDIS_REST_TOKEN}
    ASTRADB_ENDPOINT: ${env:ASTRADB_ENDPOINT}
    ASTRADB_TOKEN: ${env:ASTRADB_TOKEN}
  iam:
    role:
      managedPolicies:
        - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
        - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
        - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"

functions:
  gateway_base:
    handler: src/gateway/base.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sns:
          arn: ${env:NOSTR_EVENTS_SNS_ARN}
  gateway_chat:
    handler: src/gateway/chat.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sns:
          arn: ${env:NOSTR_EVENTS_SNS_ARN}
          filterPolicyScope: MessageAttributes
          filterPolicy:
            kind:
              - 14
            role:
              - user
  gateway_boardcast:
    handler: src/gateway/boardcast.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sns:
          arn: ${env:NOSTR_EVENTS_SNS_ARN}
  worker_persistence:
    handler: src/worker/persistence.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sqs:
          arn: arn:aws:sqs:ap-northeast-1:913870644571:persistence.fifo
          batchSize: 10
  worker_embeddings:
    handler: src/worker/embeddings.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sqs:
          arn: arn:aws:sqs:ap-northeast-1:913870644571:embeddings.fifo
          batchSize: 1
  worker_chat:
    handler: src/worker/chat.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - sqs:
          arn: arn:aws:sqs:ap-northeast-1:913870644571:chat.fifo
          batchSize: 1
  router_event:
    handler: src/router/EVENT.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: EVENT
  router_close:
    handler: src/router/CLOSE.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: CLOSE
  router_req:
    handler: src/router/REQ.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: REQ
  router_default:
    handler: src/router/default.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: $default
  router_connect:
    handler: src/router/connect.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: $connect
  router_disconnect:
    handler: src/router/disconnect.handler
    timeout: 30
    memorySize: 256
    architecture: arm64
    maximumRetryAttempts: 1
    events:
      - websocket:
          route: $disconnect
